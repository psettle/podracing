#ifndef NNFACTORY_HPP
#define NNFACTORY_HPP

#include "GameServer.hpp"
#include "GeneticAlgorithm.hpp"
#include "HCNeural.hpp"
#include "SimpleNet.hpp"
typedef NeuralNetwork NNPair;
class NeuralNetworkFactory : public ISpeciesFactory<NNPair> {
 public:
  NNPair GenerateRandomSpecies() const override;
  NNPair SparseMutate(NNPair const& t1) override;
  NNPair CrossMutate(NNPair const& t1, NNPair const& t2) override;
  double Evaluate(NNPair& t1) override;

 private:
  NeuralNetwork GenerateRandomNetwork() const;

  static double fRand(double fMin, double fMax) {
    double f = (double)rand() / RAND_MAX;
    return fMin + f * (fMax - fMin);
  }

  static double r() { return fRand(-1.0, 1.0); }
};

NNPair NeuralNetworkFactory::GenerateRandomSpecies() const {
  NNPair nn;

  nn = GenerateRandomNetwork();

  return nn;
};

NeuralNetwork NeuralNetworkFactory::GenerateRandomNetwork() const {
  NeuralNetwork network;
  NeuralNetwork::Layer layer;

  for (unsigned int i = 0; i < 24; ++i) {
    layer.bias.push_back(r());
    layer.weight.push_back(std::vector<double>());
    for (unsigned int j = 0; j < HCNeural::kInputCount; ++j) {
      layer.weight[i].push_back(r());
    }
  }

  network.AddLayer(layer);
  layer.bias.clear();
  layer.weight.clear();

  for (unsigned int i = 0; i < 16; ++i) {
    layer.bias.push_back(r());
    layer.weight.push_back(std::vector<double>());
    for (unsigned int j = 0; j < 24; ++j) {
      layer.weight[i].push_back(r());
    }
  }

  network.AddLayer(layer);

  layer.bias.clear();
  layer.weight.clear();

  for (unsigned int i = 0; i < HCNeural::kOutputCount; ++i) {
    layer.bias.push_back(r());
    layer.weight.push_back(std::vector<double>());
    for (unsigned int j = 0; j < 16; ++j) {
      layer.weight[i].push_back(r());
    }
  }

  network.AddLayer(layer);
  return network;
}

NNPair NeuralNetworkFactory::SparseMutate(NNPair const& t1) {
  NNPair p;
  p = NeuralNetwork::SparseMutate(t1);
  return p;
};

NNPair NeuralNetworkFactory::CrossMutate(NNPair const& t1, NNPair const& t2) {
  NNPair p;
  p = NeuralNetwork::CrossMutate(t1, t2);
  return p;
};

extern std::string const simple_net_str;

double NeuralNetworkFactory::Evaluate(NNPair& t1) {
  NeuralNetwork simple_net;
  simple_net.Load(simple_net_str);

  double f = 0.0;
  for (unsigned int j = 0; j < 50; ++j) {
    SimpleNet controller1(simple_net);
    HCNeural controller2(t1);

    GameController server;
    server.AddPlayer(controller1);
    server.AddPlayer(controller2);
    int winner = server.RunGame();
    double p0_fitness = (winner == 0) ? 0.0 : server.GetFitness(0);
    double p1_fitness = (winner == 1) ? 0.0 : server.GetFitness(1);

    f += ((1.0 + p1_fitness - p0_fitness) / 2);
  }

  f /= 50;
  return f;
};

std::string const simple_net_str =
    "3 16 4 -0.27120578630939662 -0.73498641926328312 0.059422589800714139 0.79011810663167215 "
    "0.32952055421613208 0.20410779137546914 -0.0074068422498245129 0.20931730094302195 "
    "-0.14698629718924527 0.063280129398480128 0.61499679555650499 0.88213141270180373 "
    "0.90584429456465343 0.89170506912442382 0.11689199499496446 -0.40977202673421431 "
    "-0.84158452101199388 0.80094607379375626 -0.7518417920468764 -0.84100161748100222 "
    "-0.44583574938200021 -1.1873622852259897 0.30729392376476339 0.085262611774040958 "
    "-0.33670155949583419 0.4952787865840631 0.14949186681722465 0.61291848506118962 "
    "0.40787682729575492 0.99747611926633528 0.93089388714255183 -0.56393627735221408 "
    "0.30109561449018835 -0.6427503280739767 -0.16542863246559039 0.34577471236304813 "
    "-0.097262489700003063 0.0086062196722311735 0.8637318033387249 -0.28382518997772149 "
    "-0.50154118472853793 -0.046684163945432906 0.84048890652180552 -0.66060975981933046 "
    "-1.0072939237647633 0.21409955137791067 0.63823664052247697 -0.64289986877040917 "
    "0.59592272713400685 0.077303384502700898 0.42114627521591841 -1.2831080050050354 "
    "-0.54915311136204115 -0.96763206884975739 0.085061189611499347 0.6576494644001587 "
    "0.60967131565294341 1.0494796594134344 0.45975524155400244 0.17260658589434494 "
    "-0.10446485793633839 -0.69090853602710056 -0.63024994659260836 0.11252479628894926 "
    "0.41726126895962401 0.26863612781151763 -0.44110843226416818 -0.19484847560045168 "
    "-1.0307565538499102 -0.81061433759575185 0.18441724906155585 -0.33936887722403636 "
    "0.47943357646412554 0.16641743217261273 -0.84474623859370712 0.18018433179723506 "
    "-0.091323587755974017 1.0049989318521686 0.1174871059297464 0.076625873592333721 16 16 "
    "-0.38719748527481918 -0.53298745689260552 0.23543809320352793 0.10200811792352062 "
    "-0.25329447309793396 -0.86064333017975381 -0.53072908719138134 -0.87133396404919594 "
    "0.92140568254646449 -0.51297036652729877 -0.073317667165135658 -0.84591814935758536 "
    "-0.92612994781334879 -0.20828882717368086 0.095153660695211639 0.54337595751823475 "
    "0.49883724478896452 -0.77884151738029117 -0.078386791589098809 -0.45673696096682637 "
    "-0.64732505264442886 0.086642048402356009 0.84504226813562422 0.73460798974578079 "
    "-0.54501174962614829 0.13200476088747823 0.39494918668172241 1.2401806695760977 "
    "-0.30025330362865077 -0.34667500839259008 -0.74102908413953061 0.17848750267036959 "
    "0.61374553666798903 1.0028656880397961 0.93860896633808411 -0.52999359111301014 "
    "-0.47364421521652905 0.65188451796014291 -0.64759971922971282 0.51868953520310057 "
    "-0.23371684926908168 -0.18980986968596456 0.32110354930265206 0.45110934781945244 "
    "-0.40413525803399769 -0.15995971556749169 0.87695547349467451 -1.2128116702780236 "
    "-0.73446760460219129 -0.39588610492263565 0.40074465163121431 0.94483779412213498 "
    "0.53675954466383857 0.25603808709982601 -0.83448591570787689 0.88830530716879785 "
    "-0.019196142460402223 0.77507248146000562 0.51735892818994711 0.11324503311258273 "
    "-0.19012421033356725 -0.86226081118198172 -0.057267983031708769 -0.28228095339823606 "
    "-0.57713858455153044 0.5789025543992431 -0.94713583788567768 0.28590044862208941 "
    "-0.53393658253730891 -0.34601580858790865 -0.0058534501174962563 -0.2835474715414899 "
    "0.70503250221259162 0.082116153447065646 0.72248603778191456 0.3027680288094729 "
    "-0.94283272804956209 -0.888219855342265 0.062758262886440611 -0.30332346568193602 "
    "-1.0027100436414687 -0.72302011169774449 0.60683919797357111 -0.57672963652455189 "
    "0.77971739860225231 0.5947355571153905 -0.69318826868495753 -0.84143498031556152 "
    "-0.96664021729178751 0.13888058107242041 0.18171941282387769 -0.34066591387676626 "
    "-0.42748191778313549 0.42920926541947696 0.69366130558183536 -0.63130588702047785 "
    "-0.44427625354777667 -0.50841395306253245 1.0795403912472912 1.0198431348612935 "
    "-0.82073122348704486 0.1228675191503647 -0.051667836542863319 0.83895077364421522 "
    "-0.19332560197759943 1.1225043488876003 0.41822870571001314 -0.034946745200964378 "
    "-0.63391216772972803 -0.83986938077944284 -0.64988250373851741 -0.16025574510940882 "
    "0.5811578722495192 -0.88857692190313431 0.98040406506546218 1.0187780388805812 "
    "-0.19201635792107907 -0.8032532731101415 -0.82647785882137503 -0.9973113193151647 "
    "0.63733024079103973 0.39138462477492597 -0.074483474227118776 0.69737235633411665 "
    "-0.002179021576586206 -1.0999359111301006 -0.0094912564470351415 0.16288033692434464 "
    "-0.45392620624408708 -0.77577745902890105 -0.64050721762749097 -0.81574449903866708 "
    "-0.57242652668843641 -0.88985259559923091 0.18978545487838372 0.98098391674550611 "
    "0.56279488509781184 0.41756340220343635 -0.67736136967070526 -0.79713736381115141 "
    "-0.43869136631366917 -0.68922086245307768 -0.68971526230658897 -1.0257240516373183 "
    "-0.49691457869197664 -0.35930051576281019 -0.05832697531052583 -0.37394634846034125 "
    "-0.64561906796472046 -0.48402966399121072 -0.2277962584307382 0.40856044190801721 "
    "0.22720419934690386 -0.09600817896053962 0.14373912778099912 -0.52497940000610366 "
    "-0.034125797296060058 -0.38953215124973295 -0.44303109836115584 1.0798730430005796 "
    "0.25220191045869322 1.1635700552385022 0.33710745567186501 -1.0067934202093569 "
    "0.26794946134830772 -0.3496230964079714 -0.43781853694265571 -0.68686178167058309 "
    "-0.48101443525498211 0.33149510177922897 -0.70828272347178578 -0.4847010711996827 "
    "-0.4226142155217138 -0.49217200231940667 0.024631488998077329 0.74710531937620173 "
    "-0.18756065553758355 -0.39154332102420131 0.14442884609515672 0.67934202093569751 "
    "-0.87860042115543058 -0.31478926969206827 0.8847529526657919 -0.73740958891567721 "
    "-0.18563188573870046 -0.44089480269783626 0.72533036286507779 -0.69186376537369898 "
    "-0.34316232795190288 0.64887234107486191 -0.6433057649464401 0.58422498245185694 "
    "-0.78588213751640368 -0.13953062532425917 -0.41073641163365576 -0.73554795983764165 "
    "1.0224158452101197 -0.171645252845851 -0.9774407177953427 -0.35198522904141361 "
    "0.33010040589617601 0.14496597186193422 -0.73308206427198108 0.26728110599078342 "
    "0.3855708487197485 0.084264656514175862 -0.21871700186162907 -0.35661488692892224 "
    "0.54716330454420614 0.61193884090701023 0.26014282662434768 0.42624591814935753 "
    "-0.63356120487075407 0.047593615527817622 -0.77553941465498821 0.71387371440778835 "
    "0.47934812463759285 0.32840968047120578 -0.33678701132236699 -0.78834192938016912 "
    "0.20777001251258892 1.1598193304239017 0.12902615436262097 -0.098361156041138972 "
    "0.68724021118808576 -0.5280312509537034 1.0807855464339122 0.57705008087405019 "
    "-1.0049745170445874 0.80275276955473496 0.10992461928159426 -0.075576036866359414 "
    "0.69370708334604936 -0.60818811609241008 0.567558824427015 -0.41441999572740867 "
    "0.058351390118106652 -0.12870571001312295 -1.0481643116550186 -0.78020874660481587 "
    "-0.65250099185155808 0.61437116611224707 0.74735862300485267 -0.2807733390301218 "
    "0.15151829584643087 0.60006103701895208 1.1315164647358624 0.15325479903561506 "
    "0.75428022095400848 0.84280831324198113 0.73388470107119974 -0.40238959929197066 "
    "1.0601519821771905 -0.96113467818231768 -0.38273873104037592 0.2838007751701408 "
    "0.92554094058046232 -0.74885708182012378 -0.38482619708853427 -0.83580431531723975 "
    "0.92157963805047782 1.0587481307412945 1.0618182927945801 -0.53233436078981899 "
    "0.93852656636249898 0.14574114200262459 -0.0073610644856105393 0.98359324930570413 "
    "0.58662373729667061 0.49219641712698747 0.91297341837824642 0.47031159398174988 4 16 "
    "-1.052211066011536 -0.37303994872890406 -0.16550187688833279 -0.69331644642475654 "
    "0.31528061769463178 -0.51861934263130582 -0.30024719992675553 0.55934629352702414 "
    "-0.94713278603472995 1.3765343180639058 -0.64631183812982573 -0.29172948393200476 "
    "0.81683706167790771 1.0176763206884976 -0.41253395184179203 -0.18627582628864409 "
    "-0.65665150914029347 0.055546739097262494 0.39929197058015686 -0.28377025666066469 "
    "1.2774498733481858 -0.19203161717581704 0.84024475844599755 0.8619281594286935 "
    "0.23131809442426834 -0.20455336161381887 0.77582018494216742 -0.60489822077089761 "
    "1.2248512222663044 0.27916196172978908 0.86478774376659451 -0.90219733268227176 "
    "0.50472426526688441 -0.21225318155461287 -0.22159489730521564 0.48585467085787537 "
    "0.30192266609698765 -0.016888943144016833 0.46281014435254986 0.0076326792199469034 "
    "-0.59105807672353261 -0.028260139774773388 -0.062498855555894656 0.080126346629230627 "
    "-0.31055635242774748 -1.0788689840388195 -0.41680654316843163 0.50900906399731427 "
    "-0.096462904751731915 0.58359019745475627 -0.28738670003357031 0.19558397167882324 "
    "0.9394299142429885 1.2725943784905545 0.50605792413098549 0.59264503921628475 "
    "0.86850795007171844 -0.19251075777459029 0.85208899197363219 -0.61149327066866055 "
    "-0.97398602252266009 1.0460829493087558 -0.69860225226599937 0.68222602008117939 "
    "0.7964232306894129 0.26885891293069242 -0.12707907345805222 -0.013321329386272795";

#endif